apiVersion: flowspec.choreoatlas.io/v1
kind: FlowSpec
metadata:
  name: sockshop-order-flow
  version: "1.0.0"

info:
  title: "Sock Shop Order Fulfillment Flow"
  description: "End-to-end order processing choreography"
  version: "1.0.0"

services:
  catalogue:
    spec: "../services/catalogue.servicespec.yaml"
  cart:
    spec: "../services/cart.servicespec.yaml"
  orders:
    spec: "../services/orders.servicespec.yaml"
  payment:
    spec: "../services/payment.servicespec.yaml"
  shipping:
    spec: "../services/shipping.servicespec.yaml"

flow:
  - step: "Browse Catalogue"
    description: "Customer browses available products"
    call: "catalogue.getCatalogue"
    input: {}
    output:
      products: "response.body"
    timeout: "5s"

  - step: "Add to Cart"
    description: "Customer adds selected item to cart"
    call: "cart.addToCart"
    depends_on: ["Browse Catalogue"]
    input:
      customerID: "${customerId}"
      itemID: "${selectedItemId}"
      quantity: "${quantity}"
    output:
      cartItem: "response.body"
    timeout: "3s"

  - step: "Create Order"
    description: "System creates order from cart contents"
    call: "orders.createOrder"
    depends_on: ["Add to Cart"]
    input:
      customer:
        id: "${customerId}"
      items: "${cartItems}"
      address: "${shippingAddress}"
      card: "${paymentCard}"
    output:
      order: "response.body"
      orderId: "response.body.id"
      orderTotal: "response.body.total"
    timeout: "10s"

  - step: "Authorize Payment"
    description: "Authorize payment for the order"
    call: "payment.authorizePayment"
    depends_on: ["Create Order"]
    input:
      amount: "${orderTotal}"
      currency: "USD"
      card: "${paymentCard}"
    output:
      authResult: "response.body"
      authorized: "response.body.authorised"
    timeout: "15s"
    retry:
      max_attempts: 2
      backoff: "exponential"

  - step: "Create Shipment" 
    description: "Create shipping label and tracking"
    call: "shipping.createShipment"
    depends_on: ["Authorize Payment"]
    condition: "${authorized} == true"
    input:
      orderID: "${orderId}"
      address: "${shippingAddress}"
      items: "${cartItems}"
    output:
      shipment: "response.body"
      trackingNumber: "response.body.trackingNumber"
    timeout: "8s"

# Temporal constraints
temporal:
  max_duration: "45s"  # End-to-end flow should complete within 45 seconds
  step_ordering:
    - ["Browse Catalogue", "Add to Cart", "Create Order", "Authorize Payment", "Create Shipment"]

# Error handling patterns
error_handling:
  - step: "Authorize Payment"
    on_failure: "rollback_order"
    circuit_breaker:
      failure_threshold: 5
      recovery_timeout: "30s"

# Success criteria
success_criteria:
  - all_steps_completed: true
  - payment_authorized: "${authorized} == true"
  - tracking_number_generated: "has(trackingNumber)"

# Monitoring and observability
monitoring:
  key_metrics:
    - "order_completion_rate"
    - "payment_authorization_rate"
    - "average_order_duration"
  alerts:
    - condition: "order_completion_rate < 0.95"
      severity: "critical"
    - condition: "average_order_duration > 30s"
      severity: "warning"